;
; SMuFF PlatformIO Project Configuration File
;

#-----------------------------------------------------------------------------------------------------------------------
# NECESSARY SETTINGS
#
# Pick the display type you use by removing the comment char (#) accordingly
# For details about software/hardware SPI see: https://sites.google.com/view/the-smuff/tips-hints/using-other-displays
#-----------------------------------------------------------------------------------------------------------------------
[display]
build_flags =   #======================================================================
                # FYSETC / MKS / BTT mini panel 12864 (recommended)
                # Only hardware SPI is available
                #======================================================================
                    #-D USE_MINI12864_PANEL_V21 -D USE_FASTLED_BACKLIGHT

                #======================================================================
                # Creality displays (including BTT TFT)
                # Set either hardware SPI or (fast) software SPI
                #======================================================================
                    #-D USE_CREALITY_DISPLAY                     
                        #-D CREALITY_HW_SPI                      # uncomment for using hardware SPI instead
                        #-D USE_FAST_SW_SPI                      # uncomment for using fast software SPI

                #======================================================================
                # Standard RepRap Full Graphics Display (i.e. MKS mini 12864)
                # Only hardware SPI is available
                #======================================================================
                    #-D USE_DEFAULT_DISPLAY                      

                #======================================================================
                # DIY or LeoNerd's/GMagicians OLED Module display (I2C/TWI)
                # Enable USE_SW_TWI only on SKR E3 V2.0 board!
                #======================================================================
                    #-D USE_TWI_DISPLAY
                    #-D USE_LEONERD_DISPLAY 
                        #-D USE_SW_TWI                           # uncomment for SKR V2.0 only!

                #======================================================================
                # SMuFF-TFT display attached to TTL serial port on EXP1
                # Such display is not available yet. If you enable this, the only way
                # to control the SMuFF is via SMuFF WebInterface!
                #======================================================================
                    #-D USE_SERIAL_DISPLAY  -D DISPLAY_SERIAL_PORT=1
[other]
build_flags =   #======================================================================
                # defines whether or not you're going to use NeoPixels on tools. The 2nd
                # define tells whether to use the applied number of NeoPixels for each 
                # tool rather than 1, which is default
                #======================================================================
                    #-D USE_FASTLED_TOOLS #-D USE_NUM_PIXELS=2 
                #======================================================================
                # The following defines determine whether or not you're going to use the Adafruit Multiservo option.
                # Do not change the PCA9685_FREQ unless you have an osciloscope to verify the new frequency setting!
                # Do not enable the USE_MULTISERVO_RELAY option unless you have the custom Backbone PCB installed!
                #======================================================================
                    #-D USE_MULTISERVO -D USE_PCA9685_SW_I2C -D PCA9685_FREQ=27750000 #-D USE_MULTISERVO_RELAY   

#-----------------------------------------------------------------------------------------------------------------------
# SPECIAL OPTIONS
#
# Set special options by adding or removing the comment char (#) only if you're instructed to do so!
#-----------------------------------------------------------------------------------------------------------------------
[options]
build_flags =   -D DEBUG                                            # comment out this define to get rid of any debug messages
                -D __HW_DEBUG__                                     # comment out this define to disable the 500Hz signal on the debug pin
                
                -D SMUFF_V5                                         # comment out this define __only__ if you're compiling for V4 or V6S (see below)
                -D NEVER_DISABLE_SERVOS                             # don't disable servos after they have been activated (Wiper/Cutter only)
                #-D SMUFF_V6S                                        # define whether or not to use a linear stepper instead of the servo for the Lid mechanics (V6 only)

                #-D USE_SPLITTER_ENDSTOPS                            # define whether or not to use endstops on Feeder for Splitter option
                
                #-D MARLIN2_ONLY                                     # uncomment this define _only_ if you're compiling for Marlin 2.0 with MMU2
                #-D SOFTRESET                                        # uncomment this define in case your bootloader sends data to (USB) serial port after RESET
                
                #-D SWAP_Y_STEPPER                                   # special case for E3-V2.0 - swaps Y and E stepper driver
                #-D USE_HIGHSPEED_SERVO                              # drive servos with a higher frequency of 250Hz
                #-D SWAP_SERVOS                                      # swap Wiper and Cutter servo pins (only E3 V2.0 / E3 V3.0 boards) 

                #-D SWAP_SELECTOR_ENDSTOP                            # special case for E3-V3.0 - swaps X and Y endstop signal pins 

#-----------------------------------------------------------------------------------------------------------------------
# SPECIAL FLAGS (don't use unless you really know what they're for)
#-----------------------------------------------------------------------------------------------------------------------

# Please notice: 
# The -D USE_DDE and -D USE_DUET3D options are obsolete now!
# Use the according Build Environment in "Project Tasks" for compiling for DDE. For Duet3D/RRF
# there's now an according flag in the configuration file SMUFF.json.

[relay]
build_flags =   # uncomment the following define if your relay is connected to the "PROBE" pin (old connection point)
                #-D RELAY_ON_PROBE

#-----------------------------------------------------------------------------------------------------------------------
# BUILD CONFIGURATIONS
#-----------------------------------------------------------------------------------------------------------------------

[platformio]
#default_envs = SKR_E3_30_RET6

#
# STM32 common build flags for USB port usage
#
[USB]
build_flags =   -D ENABLE_USB_SERIAL
                -D SERIAL_USB
                -D USBD_USE_CDC
                -D USBCON
                # not sure about the next two
                -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
                -D HAL_PCD_MODULE_ENABLED
                # modified USB Manufacturer and Product strings
                -D USB_MANUFACTURER_STRING='"STMicroelectronics"'
                -D USB_PRODUCT_STRING='"SMuFF 3.x"'
[USB_EXTRA]
build_flags =   # Mimics LeafLabs Maple USB ID. To disable that comment out the following line.
                -D MIMIC_LIBMAPLE_USB_ID -D USBD_VID=0x1eaf -D USBD_PID=0x0004 


#
# include these if you're going to use TMC stepper drivers
# and set the definitions accordingly
#
[TMC]
lib_deps =      https://github.com/teemuatlut/TMCStepper      # library being used for TMC stepper drivers
build_flags =   -D HAS_TMC_SUPPORT
                -D TMC_SW_BAUDRATE=19200
                -D TMC_HW_BAUDRATE=250000

[common]
build_type  =    release
build_flags =    # some compiler options to get rid of not really critical messages while compiling
                -Wno-unused-variable
                -Wno-format-extra-args
                -Wno-misleading-indentation
                
                # U8G2 library wrappers
                -Wl,--wrap=u8g2_UserInterfaceSelectionList
                -Wl,--wrap=u8x8_byte_arduino_2nd_hw_spi
                -Wl,--wrap=u8g2_UserInterfaceMessage
                -std=gnu++14
                -Os
                -g0  # generate debug information, use: -g for default, -g1 for minimal, -g3 for maximal  or -g0 for no debug information
                
                # new for Arduino_Core_STM32
                -D USE_SDFAT
                -D USE_ZSERVO
                # new (doesn't compile without) for 'framework-arduinoststm32' V2.4.0 (a.k.a. @~4.20400)
                -UNDEBUG
                

build_src_filter =    +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> 
                -<Configs/> -<docs/> -<help/> -<images/> -<menus/> -<options/> -<Schematics/> -<sounds/> -<STL> -<USB-Driver>
                -<src/ClockConfig/>
                
build_unflags = -std=gnu++11

lib_deps =      https://github.com/greiman/SdFat.git#2.1.2                      # SD-Card file system library
                https://github.com/bblanchon/ArduinoJson.git#v6.21.2            # JSON library for the configuration file
                https://github.com/olikraus/U8G2_Arduino.git#2.33.15            # LC-Display library
                https://github.com/technik-gegg/SoftWireSTM32.git               # library for Software I2C
                https://github.com/technik-gegg/LeoNerd-OLED-Module-Library.git # My own library for LeoNerd's OLED Module
                https://github.com/technik-gegg/Adafruit-PWM-Servo-Driver-Library.git @ ~2.4.0 # modified Adafruit Multi-Servo library for software I2C

[AdaNeoPx]
lib_deps =      https://github.com/adafruit/Adafruit_NeoPixel.git               # Adafruit Neopixel library for STM32G0B1
build_flags =   -D USES_ADAFRUIT_NPX

[STM32_COMMON]
platform                    = ststm32@>14.0.0
#platform_packages           = framework-arduinoststm32@=4.20000.210603       # for RTC6 (otherwise you'll get a FLASH overflow)
platform_packages           = framework-arduinoststm32@~4.20400              # for non RCT6
framework                   = arduino
board_build.core            = stm32duino    # using default core


#
# BIGTREETECH SKR MINI E3-DIP V1.1 with RET6 MCU (flashing through SD-Card, using the default bootloader)
#
[env:SKR_E3DIP_RET6] # <-- newer boards are RET6
extends              = STM32_COMMON
board                = genericSTM32F103RE  
lib_ignore           = FastLED
lib_deps             = ${common.lib_deps}
                       #${TMC.lib_deps}
                       ${AdaNeoPx.lib_deps}
build_src_filter     = ${common.build_src_filter} +<src/ClockConfig/E3_F1/>
build_flags          = ${common.build_flags}
                       ${display.build_flags}
                       ${other.build_flags}
                       ${options.build_flags}
                       ${USB.build_flags}
                       ${USB_EXTRA.build_flags}
                       #${TMC.build_flags}
                       ${AdaNeoPx.build_flags}
                       -I include/SKR_mini_E3DIP
                       -D __BRD_SKR_MINI_E3DIP
                       -D __STM32F1XX
                       -D DISABLE_DEBUG_PORT
                       -D ARDUINO_ARCH_STM32
                       -D ENABLE_HWSERIAL1 
                       -D ENABLE_HWSERIAL3 
                       -D ENABLE_HWSERIAL4
                       -D FLASH_OFFSET="0x7000"         # flash memory offset for SKR bootloader
                       ${relay.build_flags}
build_unflags        = ${common.build_unflags}
extra_scripts        = include/scripts/SKR_FW_RELOC.py
                       include/scripts/OPTIONS_INFO.py
#
# same as above for using Direct Drive Extruder (DDE)
#
[env:SKR_E3DIP_RET6___DDE] 
extends              = env:SKR_E3DIP_RET6
build_flags          = ${env:SKR_E3DIP_RET6.build_flags} -D USE_DDE


#
# BIGTREETECH SKR E3-DIP V1.1 with RCT6 MCU (flashing through SD-Card, using the default bootloader)
#
[env:SKR_E3DIP_RCT6]  # <-- older boards are RCT6
extends              = env:SKR_E3DIP_RET6
board                = genericSTM32F103RC

#
# same as above for using Direct Drive Extruder (DDE)
#
[env:SKR_E3DIP_RCT6___DDE] 
extends              = env:SKR_E3DIP_RET6
board                = genericSTM32F103RC
build_flags          = ${env:SKR_E3DIP_RET6.build_flags} -D USE_DDE


#
# BIGTREETECH SKR E3 V2.0 with RET6 MCU (flashing through SD-Card, using the default bootloader)
#
[env:SKR_E3_20_RET6] # <-- newer boards are RET6
extends              = STM32_COMMON
board                = genericSTM32F103RE   
lib_ignore           = FastLED
lib_deps             = ${common.lib_deps}
                       #${TMC.lib_deps}
                       ${AdaNeoPx.lib_deps}
build_src_filter     = ${common.build_src_filter} +<src/ClockConfig/E3_F1/>
build_flags          = ${common.build_flags}
                       ${display.build_flags}
                       ${other.build_flags}
                       ${options.build_flags}
                       ${USB.build_flags}
                       ${USB_EXTRA.build_flags}
                       #${TMC.build_flags}
                       ${AdaNeoPx.build_flags}
                       -I include/SKR_mini_E3-2.0
                       -D __BRD_SKR_MINI_E3
                       -D __STM32F1XX
                       -D DISABLE_DEBUG_PORT
                       -D ARDUINO_ARCH_STM32
                       -D ENABLE_HWSERIAL1 
                       -D ENABLE_HWSERIAL3 
                       -D ENABLE_HWSERIAL4
                       -D FLASH_OFFSET="0x7000"         # flash memory offset for SKR bootloader
build_unflags        = ${common.build_unflags}
extra_scripts        = include/scripts/SKR_FW_RELOC.py
                       include/scripts/OPTIONS_INFO.py
#
# same as above for using Direct Drive Extruder (DDE)
#
[env:SKR_E3_20_RET6___DDE] 
extends              = env:SKR_E3_20_RET6
build_flags          = ${env:SKR_E3_20_RET6.build_flags} -D USE_DDE


#
# BIGTREETECH SKR E3 V2.0 with RCT6 MCU (flashing through SD-Card, using the default bootloader)
#
[env:SKR_E3_20_RCT6] # <-- older boards are RCT6
extends              = env:SKR_E3_20_RET6
board                = genericSTM32F103RC

#
# same as above for using Direct Drive Extruder (DDE)
#
[env:SKR_E3_20_RCT6___DDE] 
extends              = env:SKR_E3_20_RET6
board                = genericSTM32F103RC
build_flags          = ${env:SKR_E3_20_RET6.build_flags} -D USE_DDE


#
# Please notice: 
# The SKR E3 V1.2 board has been removed from the list of supported controllers for V6
# because it lacks in some essential components. Using E3 V2.0 or better E3 V3.0 instead,
# will give you less headache. 
# If you need to compile for V1.2, remove comment sign down below and do it at your own risk.
#
# BIGTREETECH SKR E3 V1.2 (flashing through SD-Card, using the default bootloader)
#
#[env:SKR_E3_12_RCT6]
#extends              = STM32_COMMON
#board                = genericSTM32F103RC
#lib_deps             = ${common.lib_deps}
#                       ${TMC.lib_deps}
#                       ${AdaNeoPx.lib_deps}
#build_src_filter     = ${common.build_src_filter} +<src/ClockConfig/E3_F1/>
#build_flags          = ${common.build_flags}
#                       ${display.build_flags}
#                       ${other.build_flags}
#                       ${options.build_flags}
#                       ${USB.build_flags}
#                       ${USB_EXTRA.build_flags}
#                       ${TMC.build_flags}
#                       ${AdaNeoPx.build_flags}
#                       -I include/SKR_mini_E3-1.2
#                       -D __BRD_SKR_MINI_E3
#                       -D __STM32F1XX
#                       -D ARDUINO_ARCH_STM32
#                       -D ENABLE_HWSERIAL1 
#                       #-D ENABLE_HWSERIAL2 
#                       -D ENABLE_HWSERIAL3 
#                       -D ENABLE_HWSERIAL4
#                       -D FLASH_OFFSET="0x7000"         # flash memory offset for SKR bootloader
#build_unflags        = ${common.build_unflags}
#extra_scripts        = include/scripts/SKR_FW_RELOC.py
#                       include/scripts/OPTIONS_INFO.py
#
# same as above for using Direct Drive Extruder (DDE)
#
#[env:SKR_E3_12_RCT6___DDE] 
#extends              = env:SKR_E3_12_RCT6
#build_flags          = ${env:SKR_E3_12_RCT6.build_flags} -D USE_DDE


#
# BIGTREETECH SKR MINI V1.1 (flashing through SD-Card, using the default bootloader)
#
[env:SKR_MINI_RCT6]
extends              = STM32_COMMON
board                = genericSTM32F103RC
lib_deps             = ${common.lib_deps}
                       #${TMC.lib_deps}
                       ${AdaNeoPx.lib_deps}
build_src_filter     = ${common.build_src_filter} +<src/ClockConfig/E3_F1/>
build_flags          = ${common.build_flags}
                       ${display.build_flags}
                       ${other.build_flags}
                       ${options.build_flags}
                       ${USB.build_flags}
                       ${USB_EXTRA.build_flags}
                       #${TMC.build_flags}
                       ${AdaNeoPx.build_flags}
                       -I include/SKR_mini
                       -D __BRD_SKR_MINI
                       -D __STM32F1XX
                       -D ARDUINO_ARCH_STM32
                       -D ENABLE_HWSERIAL1 
                       -D ENABLE_HWSERIAL3 
                       #-D ENABLE_HWSERIAL4
                       -D FLASH_OFFSET="0x7000"         # flash memory offset for SKR bootloader
build_unflags        = ${common.build_unflags}
extra_scripts        = include/scripts/SKR_FW_RELOC.py
                       include/scripts/OPTIONS_INFO.py
#
# same as above for using Direct Drive Extruder (DDE)
#
[env:SKR_MINI_RCT6___DDE] 
extends              = env:SKR_MINI_RCT6
build_flags          = ${env:SKR_MINI_RCT6.build_flags} -D USE_DDE


#
# BIGTREETECH SKR E3 V3.0 RET6 MCU (flashing through SD-Card, using the default bootloader)
#
[env:SKR_E3_30_RET6]
extends              = STM32_COMMON
board                = STM32G0B1RE 
board_build.variants_dir = variants      # needed for E3 V3.0
lib_ignore           = FastLED
lib_deps             = ${common.lib_deps}
                       ${TMC.lib_deps}
                       ${AdaNeoPx.lib_deps}
build_src_filter     = ${common.build_src_filter} +<src/ClockConfig/E3_G0/>
build_flags          = ${common.build_flags}
                       ${display.build_flags}
                       ${other.build_flags}
                       ${options.build_flags}
                       ${USB.build_flags}
                       ${TMC.build_flags}
                       ${AdaNeoPx.build_flags}
                       -I include/SKR_mini_E3-3.0
                       -D __BRD_SKR_MINI_E3
                       -D __STM32G0XX
                       -D ARDUINO_ARCH_STM32
                       -D ENABLE_HWSERIAL1 
                       #-D ENABLE_HWSERIAL2 
                       -D ENABLE_HWSERIAL3 
                       #-D ENABLE_HWSERIAL4
                       -D FLASH_OFFSET="0x2000"         # flash memory offset for SKR bootloader
build_unflags        = ${common.build_unflags}
extra_scripts        = include/scripts/SKR_FW_RELOC.py
                       include/scripts/OPTIONS_INFO.py
debug_tool           = stlink

#
# same as above for using Direct Drive Extruder (DDE)
#
[env:SKR_E3_30_RET6___DDE] 
extends              = env:SKR_E3_30_RET6
build_flags          = ${env:SKR_E3_30_RET6.build_flags} -D USE_DDE
debug_tool           = stlink

#--------------------------------------------------------
# WARNING: This board hasn't been tested yet!
#--------------------------------------------------------
#
# BIGTREETECH SKR E3 RRF (flashing through SD-Card, using the default bootloader)
#
[env:SKR_E3_RRF_VGT6]
extends              = STM32_COMMON
board                = genericSTM32F407VGT6
lib_ignore           = FastLED
lib_deps             = ${common.lib_deps}
                       ${TMC.lib_deps}
                       ${AdaNeoPx.lib_deps}
build_src_filter     = ${common.build_src_filter} +<src/ClockConfig/E3_F4/>
build_flags          = -D WARNING_NOT_RELEASED
                       ${common.build_flags}
                       ${display.build_flags}
                       ${other.build_flags}
                       ${options.build_flags}
                       ${USB.build_flags}
                       ${TMC.build_flags}
                       ${AdaNeoPx.build_flags}
                       -I include/SKR_E3-RRF
                       -D __BRD_SKR_E3_RRF
                       -D __STM32F4XX 
                       -D STM32_HIGH_DENSITY
                       -D ARDUINO_ARCH_STM32
                       -D ENABLE_HWSERIAL1 
                       -D ENABLE_HWSERIAL2 
                       -D ENABLE_HWSERIAL3
                       #-D ENABLE_HWSERIAL4
                       -D FLASH_OFFSET="0x8000"         # flash memory offset for SKR bootloader
build_unflags        = ${common.build_unflags}
                       -U USE_FASTLED_TOOLS
                       -U USE_FASTLED_BACKLIGHT
extra_scripts        = include/scripts/SKR_FW_RELOC.py
                       include/scripts/OPTIONS_INFO.py
#
# same as above for using Direct Drive Extruder (DDE)
#
[env:SKR_E3_RRF_VGT6___DDE] 
extends              = env:SKR_E3_RRF
build_flags          = ${env:SKR_E3_RRF.build_flags} -D USE_DDE


